version: '3.8'

x-common-variables: &common-variables
  DEBUG: 1
  TELEGRAM_BOT_API_KEY: 6159160252:AAF1wkp3scOkCDnOoah8y_s9IcYIhWwxlUY
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: db
  SSL_HEADER: https

services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend/
    command: >
      sh -c "npx serve -l 3000 -s -n build"
    container_name: frontend
    volumes:
      - /app/node_modules
      - /app/build
      - ./frontend:/app
    ports:
      - "80:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    stdin_open: true
    tty: true

  backend:
    build: 
      dockerfile: Dockerfile
      context: ./backend
    command: >
      sh -c "python manage.py migrate --run-syncdb &&
      python manage.py runserver 0.0.0.0:8000"
    container_name: backend
    image: backend-img
    volumes:
      - ./backend:/app
    ports:
      - "81:8000"
    environment:
      *common-variables
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 10s
      retries: 3

  rabbitmq:
    restart: always
    image: rabbitmq:latest
    container_name: rabbitmq
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=+sbwt none +sbwtdcpu none +sbwtdio none
    ports:
      - "5672:5672"

  worker:
    image: backend-img
    container_name: worker
    environment:
      *common-variables
    command: >
      sh -c "celery -A app worker -l info 
      --without-heartbeat --without-gossip --without-mingle"
    depends_on:
      - rabbitmq

  celery-beat:
    image: backend-img
    container_name: celery-beat
    environment:
      *common-variables
    command: >
      sh -c "celery -A app beat -l info"
    depends_on:
      - rabbitmq