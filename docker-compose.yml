version: '3.8'

services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend/
    command: >
      sh -c "npx serve -l 3000 -s -n build"
    container_name: frontend
    volumes:
      - /app/node_modules
      - /app/build
      - ./frontend:/app
    ports:
      - "80:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    stdin_open: true
    tty: true

  backend:
    build: 
      dockerfile: Dockerfile
      context: ./backend
    command: >
      sh -c "python manage.py migrate --run-syncdb &&
      python manage.py runserver 0.0.0.0:8000"
    container_name: backend
    volumes:
      - ./backend:/app
    ports:
      - "81:8000"
    environment:
      - DEBUG=0
      - TELEGRAM_BOT_API_KEY=6159160252:AAF1wkp3scOkCDnOoah8y_s9IcYIhWwxlUY
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - SSL_HEADER=https
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 3s
      timeout: 5s
      retries: 10